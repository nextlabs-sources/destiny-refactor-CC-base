<project name="DCSF" default="build">

    <var name="nlbuildroot" value="${basedir}/../../../.." />
    <property name="src.dir"      value="${basedir}"/>
    <property name="etc.dir"      value="${basedir}/etc"/>
    <property name="src.main.dir"      value="${basedir}/src/java/main"/>
    <property name="src.test.dir"      value="${basedir}/src/java/test"/>
    <property name="src.wsdl.dir"      value="${basedir}/src/wsdl"/>
    <property name="build.main.dest"   value="${build.root.dir}/server/container/dcsf/WEB-INF/classes"/>
    <property name="build.test.dest"   value="${build.root.dir}/server/container/dcsf/WEB-INF/testclasses"/>
    <property name="doc.dest"   value="${build.root.dir}/server/container/dcsf/doc"/>
    <property name="build.gendest" value="${build.root.dir}/server/container/dcsf/genclasses"/>
    <property name="build.webapp" value="${build.root.dir}/server/container/dcsf"/>
    <property name="build.webapp2" value="${build.root.dir}/server/container/dcsf2"/>
    <property name="build.webinf" value="${build.webapp}/WEB-INF"/>
    <property name="build.weblib" value="${build.webapp}/WEB-INF/lib"/>
    <property name="services.dcsf.dir" value="com/bluejungle/destiny/services/dcsf"/>
    <property name="services.common.dir" value="com/bluejungle/destiny/services/common"/>

    <property file="${nlbuildroot}/src/build-scripts/etc/build.properties" />

    <path id="compile.dcsf.classpath">
        <path refid="compile.classpath"/>
        <pathelement path="${build.root.dir}/common-framework.jar"/>
        <pathelement path="${build.root.dir}/server-dcsf.jar"/>
        <pathelement path="${build.root.dir}/server-framework.jar"/>
        <pathelement path="${build.root.dir}/server-datasource.jar"/>
        <pathelement path="${build.root.dir}/server-base.jar"/>
        <pathelement path="${build.root.dir}/server-base-internal.jar"/>
        <pathelement path="${build.root.dir}/server-base-test.jar"/>   
        <pathelement path="${build.root.dir}/dms-services.jar"/>
        <pathelement path="${build.root.dir}/management-types.jar"/>
        <pathelement path="${build.root.dir}/server-shared-types.jar"/>
        <pathelement path="${build.root.dir}/version-types.jar"/>
        <pathelement path="${build.root.dir}/common-version.jar"/>
        <pathelement path="${build.root.dir}/common-version-impl.jar"/>
        <pathelement path="${build.main.dest}"/>
        <pathelement path="${build.gendest}"/>
    </path>

    <path id="compile.test.dcsf.classpath">
        <path refid="compile.dcsf.classpath"/>
        <pathelement path="${xlib_jar_dir}/commons-digester.jar"/>
        <pathelement path="${build.root.dir}/crypt.jar"/>
    </path>
    
    <target name="pre-build">
        <mkdir dir="${build.main.dest}"/>
        <mkdir dir="${build.test.dest}"/>
        <mkdir dir="${build.gendest}"/>
        <mkdir dir="${war.dir}"/>
        <mkdir dir="${gen.dir}/${services.dcsf.dir}/"/>
    </target>
    
    <target name="doc">
        <mkdir dir="${doc.dest}"/>
        <javadoc sourcepath="${src.main.dir}" destdir="${doc.dest}" linksource="yes" 
                 classpathref="compile.dcsf.classpath" source="${compile.source}" >
            <packageset dir="${src.main.dir}" defaultexcludes="yes">
                <include name="com/bluejungle/destiny/container/dcsf/**"/>
            </packageset>
        </javadoc>
    </target>
    
    <target name="setup-webapp-admin" unless="wsdlBuild.notRequired">
        <java failonerror="true" classname="org.apache.axis.utils.Admin" dir="${build.webinf}" fork="true">
            <arg value="server"/>
            <arg value="${gen.dir}/${services.dcsf.dir}/deploy-DCSFService.wsdd"/>
            <classpath refid="compile.dcsf.classpath"/>
        </java>
    </target>
    
    <target name="setup-webapp" depends="pre-build">
        <mkdir dir="${build.weblib}"/>
        <mkdir dir="${build.root.dir}/work"/>
        <mkdir dir="${build.root.dir}/webapps"/>
        <copy todir="${build.weblib}">
            <fileset dir="${build.root.dir}">
                <include name="agent-types.jar"/>
                <include name="common-dictionary.jar"/>
                <include name="common-domain-types.jar"/>
                <include name="common-framework.jar"/>
                <include name="common-framework-types.jar"/>
                <include name="common-version-impl.jar"/>
                <include name="crypt.jar"/>
                <include name="dcsf-services.jar"/>
                <include name="dcsf-types.jar"/>
                <include name="deployment-types.jar"/>
                <include name="dms-services.jar"/>
                <include name="log-types.jar"/>
                <include name="management-types.jar"/>
                <include name="messages.jar"/>
                <include name="policy-types.jar"/>
                <include name="server-axis-security.jar"/>
                <include name="server-dcsf.jar"/>
                <include name="server-dictionary.jar"/>
                <include name="server-framework.jar"/>
                <include name="server-datasource.jar"/>
                <include name="server-shared-types.jar"/>
                <include name="version.jar"/>
                <include name="version-types.jar"/>
            </fileset>
            <fileset refid="axis.jars"/>
            <fileset refid="xerces.jars"/>
        </copy>
        
        <copy file="${xlib_jar_dir}/activation.jar" todir="${build.weblib}" failonerror="true"/>
        <copy file="${xlib_jar_dir}/mail.jar" todir="${build.weblib}" failonerror="true"/>
        
        <!-- Copy the EHCACHE jar -->
        <copy file="${xlib_jar_dir}/ehcache-1.1.jar" todir="${build.weblib}" failonerror="true"/>
        
        <copy file="${src.dir}/etc/web.xml" todir="${build.webinf}"/>
        <copy file="${src.dir}/etc/jboss-deployment-structure.xml" todir="${build.webinf}"/>
        <copy file="${wsdd.template.dir}/server-config.wsdd" todir="${build.webinf}" failonerror="true"/>
        
        <copy file="${src.dir}/etc/web.xml" todir="${build.webapp}/WEB-INF"/>
        <antcall target="setup-webapp-admin" inheritRefs="true"/>
        
        <!-- for distributed deployment, makes a copy of DCSF into another directory -->
        <copy todir="${build.webapp2}" failonerror="true">
            <fileset dir="${build.webapp}">
                <include name="**/*.*"/>
            </fileset>
        </copy>
        
    </target>
    
    <target name="setup-war">
        <war destfile="${war.dir}/dcsf.war" manifest="${etc.dir}/dcsf.manifest.txt" basedir="${build.webapp}" webxml="${build.webinf}/web.xml" excludes="genclasses/**/*.*, testclasses/**/*.*, **/test/**/*, **/tests/**/*"/>
    </target>
    
    <target name="wsdl-generate" depends="pre-build" description="Generates code from WSDL">
        
        <!-- Takes care of DCSFService -->
        <wsdl2java url="${src.wsdl.dir}/${services.dcsf.dir}/DCSFService.wsdl"
                   output="${gen.dir}"
                   all="true"
                   deployscope="application"
                   serverSide="yes"
                   implementationClassName="com.bluejungle.destiny.container.dcsf.DCSFServiceImpl"
                   noimports="no"
                   verbose="yes"
                   testcase="yes"
                   nowrapped="true"
                   timeout="-1"
                   factory="com.bluejungle.destiny.wsgen.SecureServiceGenerator"
                   trustedCallers="DCC"
                   userAuthRequired="false">
        </wsdl2java>        
        <move file="${gen.dir}/${services.dcsf.dir}/deploy.wsdd" tofile="${gen.dir}/${services.dcsf.dir}/deploy-DCSFService.wsdd"/>
        <move file="${gen.dir}/${services.dcsf.dir}/undeploy.wsdd" tofile="${gen.dir}/${services.dcsf.dir}/undeploy-DCSFService.wsdd"/>
    </target>
    
    <target name="wsdl-compile" description="Compile generated WSDL code">
        <javac srcdir="${gen.dir}" destdir="${build.gendest}" debug="${compile.debug}" verbose="${compile.verbose}" source="${compile.source}" target="${compile.target}" bootclasspath="${compile.bootclasspath}">
            <classpath refid="compile.classpath"/>
            <include name="${services.dcsf.dir}/**/*.java"/>
        </javac>
    </target>
    
    <target name="wsdl-jar" description="Packages compiled WSDL code">
        <jar destfile="${build.root.dir}/dcsf-services.jar">
            <fileset dir="${build.gendest}">
                <include name="${services.dcsf.dir}/*.class"/>
            </fileset>
        </jar>
        <jar destfile="${build.root.dir}/dcsf-types.jar">
            <fileset dir="${build.gendest}">
                <include name="${services.dcsf.dir}/types/*.class"/>
                <include name="${services.common.dir}/types/*.class"/>
            </fileset>
        </jar>
    </target>

    <target name="compile">
        <javac srcdir="${src.main.dir}" destdir="${build.main.dest}" debug="${compile.debug}" verbose="${compile.verbose}">
            <classpath refid="compile.dcsf.classpath"/>
            <exclude name="com/bluejungle/destiny/container/dcc/*.java"/>
        </javac>
        <javac srcdir="${src.test.dir}" destdir="${build.test.dest}" debug="${compile.debug}" verbose="${compile.verbose}">
            <classpath refid="compile.test.dcsf.classpath"/>
            <exclude name="com/bluejungle/destiny/container/dcc/*.java"/>
        </javac>
    </target>
    
    <target name="compile-base">
        <javac srcdir="${src.main.dir}" destdir="${build.main.dest}" debug="${compile.debug}" verbose="${compile.verbose}">
            <classpath refid="compile.dcsf.classpath"/>
            <exclude name="com/bluejungle/destiny/container/dcsf/*.java"/>
        </javac>
        <javac srcdir="${src.test.dir}" destdir="${build.test.dest}" debug="${compile.debug}" verbose="${compile.verbose}">
            <classpath refid="compile.test.dcsf.classpath"/>
            <exclude name="com/bluejungle/destiny/container/dcsf/*.java"/>
        </javac>
    </target>
    
    <target name="jar" depends="compile-base">
        <jar destfile="${build.root.dir}/server-dcsf.jar">
            <fileset dir="${build.main.dest}">
                <include name="com/bluejungle/destiny/container/dcc/*.class"/>
            </fileset>
        </jar>
        <jar destfile="${build.root.dir}/server-dcsf-test.jar">
            <fileset dir="${build.test.dest}">
                <include name="com/bluejungle/destiny/container/dcc/*.class"/>
            </fileset>
        </jar>
    </target>
    
    <target name="deploy">
    </target>

    <target name="build" depends="compile, setup-webapp, setup-war">
    </target>
    
    <target name="build-base" depends="jar">
    </target>
    
    <target name="tests">
        <junit printsummary="withOutAndErr" showoutput="yes" haltonfailure="${junit.haltonfailure}" failureproperty="junit.fail" fork="true">
            <formatter type="xml"/>
            <test name="com.bluejungle.destiny.container.dcsf.DCSFWebAppTestSuite" todir="${log.dir}/tests"/>
            <classpath>
                <pathelement path="${src.root.dir}/etc/junit"/>
                <pathelement path="${build.main.dest}"/>
                <pathelement path="${build.test.dest}"/>
                <pathelement path="${build.root.dir}/dcsf-types.jar"/>
                <pathelement path="${build.root.dir}/dcsf-services.jar"/>
                <pathelement path="${build.root.dir}/log-types.jar"/>
                <pathelement path="${build.root.dir}/management-types.jar"/>
                <pathelement path="${build.root.dir}/dms-services.jar"/>
                <pathelement path="${build.root.dir}/server-base.jar"/>
                <pathelement path="${build.root.dir}/server-base-internal.jar"/>
                <pathelement path="${build.root.dir}/server-dcsf.jar"/>
                <pathelement path="${build.root.dir}/server-framework.jar"/>
                <pathelement path="${build.root.dir}/server-datasource.jar"/>
                <pathelement path="${build.root.dir}/common-framework-types.jar"/>
                <pathelement path="${build.root.dir}/common-version.jar"/>
                <pathelement path="${build.root.dir}/common-version-impl.jar"/>
                <pathelement path="${build.root.dir}/version-types.jar"/>
                <pathelement path="${xlib_jar_dir}/commons-digester.jar"/>
                <pathelement path="${build.root.dir}/common-framework.jar"/>
                <pathelement path="${xlib_jar_dir}/commons-logging.jar"/>
                <pathelement path="${xlib_jar_dir}/commons-beanutils.jar"/>
                <pathelement path="${xlib_jar_dir}/commons-collections.jar"/>
                <pathelement path="${xlib_jar_dir}/xercesImpl.jar"/>
                <pathelement path="${xlib_jar_dir}/resolver.jar"/>
                <pathelement path="${xlib_jar_dir}/xml-apis.jar"/>
                <pathelement path="${xlib_jar_dir}/xmlParserAPIs.jar"/>
                <path refid="compile.classpath"/>
            </classpath>
        </junit>
    </target>

</project>
